// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Models;

namespace Portal.Migrations
{
    [DbContext(typeof(Db))]
    partial class DbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Portal.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<Guid?>("ProductionId");

                    b.Property<Guid?>("ProductionId1");

                    b.Property<Guid?>("SolutionItemId");

                    b.Property<Guid?>("SolutionItemId1");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId")
                        .IsUnique()
                        .HasFilter("[ProductionId] IS NOT NULL");

                    b.HasIndex("ProductionId1")
                        .IsUnique()
                        .HasFilter("[ProductionId1] IS NOT NULL");

                    b.HasIndex("SolutionItemId");

                    b.HasIndex("SolutionItemId1");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Portal.Models.Production", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("Sort");

                    b.HasKey("Id");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("Portal.Models.Solution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("Sort");

                    b.HasKey("Id");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("Portal.Models.SolutionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<Guid?>("SolutionId");

                    b.Property<int>("Sort");

                    b.HasKey("Id");

                    b.HasIndex("SolutionId");

                    b.ToTable("SolutionItems");
                });

            modelBuilder.Entity("Portal.Models.Post", b =>
                {
                    b.HasOne("Portal.Models.Production")
                        .WithOne()
                        .HasForeignKey("Portal.Models.Post", "ProductionId");

                    b.HasOne("Portal.Models.Production", "Production")
                        .WithOne("Post")
                        .HasForeignKey("Portal.Models.Post", "ProductionId1");

                    b.HasOne("Portal.Models.SolutionItem")
                        .WithMany()
                        .HasForeignKey("SolutionItemId");

                    b.HasOne("Portal.Models.SolutionItem", "SolutionItem")
                        .WithMany("Posts")
                        .HasForeignKey("SolutionItemId1");
                });

            modelBuilder.Entity("Portal.Models.SolutionItem", b =>
                {
                    b.HasOne("Portal.Models.Solution", "Solution")
                        .WithMany("SolutionItems")
                        .HasForeignKey("SolutionId");
                });
#pragma warning restore 612, 618
        }
    }
}
